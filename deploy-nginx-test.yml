---
- name: Deploy Nginx as a test instance
  hosts: localhost
  connection: local
  become: true

  tasks:
  - name: Installing apt key for Docker repository
    apt_key:
      url: https://download.docker.com/linux/raspbian/gpg
      state: present

  - name: Adding official repository
    apt_repository:
      repo: deb [arch=armhf] https://download.docker.com/linux/raspbian bullseye stable

  - name: Installing Docker Community Edition
    apt:
      name: docker-ce
      state: latest
      update_cache: true

  # Docker Compose is needed later and it also pulls in dependencies that are
  # needed for community.docker modules, so it is installed now even though
  # docker-compose is not being used to deploy the Nginx test container.
  - name: Installing Docker Compose
    shell:
      cmd: pip3 install docker-compose

  - name: Deploying Nginx container
    community.docker.docker_container:
      image: nginx
      name: nginx
      hostname: nginx
      state: started
      restart: yes
      restart_policy: unless-stopped
      ports:
      - 80:80
      - 443:443
      volumes:
      - /etc/ssl:/etc/ssl

  - name: Checking for host certificate
    stat:
      path: "/etc/ssl/certs/{{ ansible_hostname }}.{{ ansible_domain }}.crt"
    register: host_cert

  - name: Checking for host key
    stat:
      path: "/etc/ssl/private/{{ ansible_hostname }}.{{ ansible_domain }}.key"
    register: host_key

  - name: Creating an alternate default.conf with SSL enabled
    copy:
      dest: /tmp/default.conf
      force: no
      content: |
        server {
            listen 80;
            listen 443 ssl;
            server_name  {{ ansible_hostname }}.{{ ansible_domain }};
            ssl_certificate  /etc/ssl/certs/{{ ansible_hostname }}.{{ ansible_domain }}.crt;
            ssl_certificate_key  /etc/ssl/private/{{ ansible_hostname }}.{{ ansible_domain }}.key;
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
            }
        }
    when: host_cert.stat.exists and host_key.stat.exists

  - name: Copying alternate default.conf to Nginx container
    shell:
      cmd: docker cp /tmp/default.conf nginx:/etc/nginx/conf.d/default.conf
    when: host_cert.stat.exists and host_key.stat.exists

  - name: Reloading nginx configuration
    shell:
      cmd: docker exec nginx service nginx reload
    when: host_cert.stat.exists and host_key.stat.exists
