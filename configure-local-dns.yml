---
- name: Create DNS zone files for intranet domain.
  hosts: localhost
  connection: local
  become: true

  # The domain name is autodetected based on your network setup.
  # It can be overridden by editing or by using Ansible host_vars.
  vars:
    domain: "{{ ansible_domain }}"

  tasks:

  # RFC6762 reserves .local for Multicast DNS. See Appendix G to find
  # acceptable names for a local area network top-level domain.
  - name: Verify zero-configuration .local domain is not being used.
    debug:
      msg: Configuring for {{ ansible_domain }}
    failed_when: ansible_domain == "local" or ansible_domain == ""

  # Turn a network like 192.168.1.0 into a 1.168.192 zone file name.
  # This playbook is only equiped to deal with a Class C subnet.
  # While this should sufice for 99% of home network installations,
  # this step will fail when it's not Class C as expected.
  - name: Create Numeric Part of Reverse Lookup Zone Name
    set_fact:
      reverse_address: "{{ ansible_default_ipv4.network.split('.')[2] }}.{{ ansible_default_ipv4.network.split('.')[1] }}.{{ ansible_default_ipv4.network.split('.')[0] }}"
    failed_when: ansible_default_ipv4.netmask != '255.255.255.0'

  # A good configuration should return no errors in the output.
  - name: Verify good starting configuration.
    shell:
      cmd: named-checkconf
    register: named_checkconf
    failed_when: named_checkconf.stdout_lines | length > 0

  # The gateway address and this host's address are include by default.
  # This playbook will not overwrite the file if it already exists.
  # Some manual adjustment of spacing will be required for columns to
  # line up properly.
  - name: Configure forward lookup zonefile.
    copy:
      dest: /etc/bind/db.{{ domain }}
      force: no
      content: |
        $ORIGIN {{ domain }}.
        $TTL 3D                                   ; default expiration time
        @             SOA     {{ domain }}. root.{{ domain }}. (
                              20160325            ; serial number
                              8H                  ; refresh interval
                              2H                  ; retry interval
                              4W                  ; expiration
                              1D )                ; minimum TTL
                      NS      localhost.
        ;
        router        A       {{ ansible_default_ipv4.gateway }}
        {{ ansible_hostname }}  A       {{ ansible_default_ipv4.address }}
        *.{{ ansible_hostname }}  CNAME   {{ ansible_hostname }}

  # A good zone file will result in OK being returned in the output.
  - name: Verify forward lookup zonefile.
    shell:
      cmd: named-checkzone {{ domain }} /etc/bind/db.{{ domain }}
    register: named_checkzone
    failed_when: "'OK' not in named_checkzone.stdout_lines"

  # The gateway address and this host's address are include by default.
  # This playbook will not overwrite the file if it already exists.
  - name: Configure reverse lookup zonefile.
    copy:
      dest: /etc/bind/db.{{ reverse_address }}
      force: no
      content: |
        $ORIGIN {{ reverse_address }}.in-addr.arpa.
        $TTL 3D                                   ; default expiration time
        @             SOA     {{ domain }}. root.{{ domain }}. (
                              20160325            ; serial number
                              8H                  ; refresh interval
                              2H                  ; retry interval
                              4W                  ; expiration
                              1D )                ; minimum TTL
                      NS      localhost.
        ;
        1             PTR     router
        {{ ansible_eth0.ipv4.address.split('.')[3] }}            PTR     {{ ansible_hostname }}

  - name: Verify reverse lookup zonefile.
    shell:
      cmd: named-checkzone {{ reverse_address }}.in-addr.arpa /etc/bind/db.{{ reverse_address }}
    register: named_checkzone
    failed_when: "'OK' not in named_checkzone.stdout_lines"

  # After the zones are added to named.conf.local, it is advisable to not
  # hand-edit the entries. Doing so can confuse Ansible's lineinfile and
  # result in an unstable configuration if this playbook is run again.
  - name: Add forward lookup to local configuration.
    lineinfile:
      path: /etc/bind/named.conf.local
      regexp: '^zone "{{ domain }}" { type master; file "/etc/bind/db.{{ domain }}"; };$'
      line: "zone \"{{ domain }}\" { type master; file \"/etc/bind/db.{{ domain }}\"; };\n"

  - name: Add reverse lookup to local configuration.
    lineinfile:
      path: /etc/bind/named.conf.local
      regexp: '^zone "{{ reverse_address }}.in-addr.arpa" { type master; file "/etc/bind/db.{{ reverse_address }}"; };$'
      line: "zone \"{{ reverse_address }}.in-addr.arpa\" { type master; file \"/etc/bind/db.{{ reverse_address }}\"; };\n"

  - name: Verify good final configuration.
    shell:
      cmd: named-checkconf
    register: named_checkconf
    failed_when: named_checkconf.stdout_lines | length > 0
